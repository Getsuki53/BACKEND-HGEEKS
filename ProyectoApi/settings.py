"""
Django settings for ProyectoApi project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(0d6l3zs-8qx#fv_d0tdm=yoqotog!sd7c#txl96ucv1^8*x10'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

import os
from decouple import config
import cloudinary
import cloudinary.uploader
import cloudinary.api

# Configuración de Cloudinary
cloudinary.config(
    cloud_name=config('CLOUDINARY_CLOUD_NAME', default='devfncp85'),
    api_key=config('CLOUDINARY_API_KEY', default='498194629494134'),
    api_secret=config('CLOUDINARY_API_SECRET', default='_EhddXk2IJtd7bjU8ZTuCusdN0Y')
)

# Detectar si estamos en producción
if 'RENDER' in os.environ:
    DEBUG = False
    ALLOWED_HOSTS = [os.environ.get('RENDER_EXTERNAL_HOSTNAME')]
else:
    DEBUG = True
    ALLOWED_HOSTS = ['*']

# Configuración de base de datos con SSL
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': 'ingedb.mysql.database.azure.com',
        'PORT': '3306',
        'USER': 'inge',
        'PASSWORD': 'Shar1ngan',
        'NAME': 'hgeeks',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'ssl': {
                'ssl_mode': 'REQUIRED',
            } if 'RENDER' in os.environ else {},
        }
    }
}

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api.apps.ApiConfig',
    'corsheaders',
    'rest_framework.authtoken',
    'cloudinary_storage',
    'cloudinary',
]

# Configuración de archivos estáticos
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Whitenoise para servir archivos estáticos en producción
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # <-- Agregar esto
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Cloudinary como almacenamiento por defecto
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# Tu configuración existente de CORS
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'access-control-allow-origin',
    'access-control-allow-headers',
    'access-control-allow-methods',
    'cache-control',
    'pragma',
    'x-forwarded-for',
    'x-forwarded-proto',
]

# Métodos HTTP permitidos
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'HEAD',
]

# Permitir cookies y credenciales
CORS_ALLOW_CREDENTIALS = True

# Configuraciones adicionales para resolver problemas de CORS
CORS_PREFLIGHT_MAX_AGE = 86400  # 24 horas
CORS_EXPOSE_HEADERS = [
    'content-type',
    'x-csrf-token',
    'authorization',
]

# Deshabilitar protección CSRF para desarrollo (solo para APIs)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:5000",
    "http://127.0.0.1:5000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
]

# Configuración adicional para APIs
CSRF_COOKIE_SECURE = False  # Solo en desarrollo
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_SECURE = False  # Solo en desarrollo
